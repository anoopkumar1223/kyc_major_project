{"ast":null,"code":"var _jsxFileName = \"/home/anoop/Documents/major/kyc_root/kyc/src/components/bank_home/bank_details.js\";\n// import React from \"react\";\n// import Kycabi from \"../../contracts/kyc.json\";\n// export default async function BankDetails() {\n//   const web3 = window.web3;\n//   let name, count;\n//   const acc = web3.currentProvider.selectedAddress;\n//   const networkId = web3.eth.net.getId();\n//   const networkData = Kycabi.networks[networkId];\n//   const kyc = new web3.eth.Contract(Kycabi.abi, networkData.address);\n//   let details = await kyc.methods.viewBank(acc).call({\n//     from: acc,\n//     gas: 4700000,\n//   });\n//   name = details[0];\n//   console.log(details);\n//   count = details[1];\n//   return (\n//     <div\n//       style={{\n//         marginLeft: \"20px\",\n//       }}\n//     >\n//       <div>\n//         <h3>Bank name : {name}</h3>\n//       </div>\n//       <div>\n//         <h3>ETH Address : {web3.currentProvider.selectedAddress}</h3>\n//       </div>\n//       <div>\n//         <h3>Total KYC count : {count}</h3>\n//       </div>\n//     </div>\n//   );\n// }\nimport { React, Component } from \"react\";\nimport Kycabi from \"../../contracts/kyc.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n  }\n\n  async loadWeb3() {\n    const web3 = window.web3;\n    let name, count;\n    const acc = web3.currentProvider.selectedAddress;\n    const networkId = web3.eth.net.getId();\n    const networkData = Kycabi.networks[networkId];\n    const kyc = new web3.eth.Contract(Kycabi.abi, networkData.address);\n    let details = await kyc.methods.viewBank(acc).call({\n      from: acc,\n      gas: 4700000\n    });\n    name = details[0];\n    console.log(details);\n    count = details[1];\n  } // async loadBlockchainData() {\n  //   const web3 = window.web3;\n  //   const accounts = await web3.eth.getAccounts();\n  //   this.setState({ account: accounts[0] });\n  //   const networkId = await web3.eth.net.getId();\n  //   const networkData = Kycabi.networks[networkId];\n  //   if (networkData) {\n  //     console.log(\"success\");\n  //     var acc = web3.currentProvider.selectedAddress;\n  //     console.log(acc);\n  //   } else {\n  //     window.alert(\"Kyc contract not deployed to detected network.\");\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Bank name : \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"ETH Address : \", web3.currentProvider.selectedAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Total KYC count : \", count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Kycabi","App","componentDidMount","loadWeb3","web3","window","name","count","acc","currentProvider","selectedAddress","networkId","eth","net","getId","networkData","networks","kyc","Contract","abi","address","details","methods","viewBank","call","from","gas","console","log","render","marginLeft"],"sources":["/home/anoop/Documents/major/kyc_root/kyc/src/components/bank_home/bank_details.js"],"sourcesContent":["// import React from \"react\";\n// import Kycabi from \"../../contracts/kyc.json\";\n\n// export default async function BankDetails() {\n//   const web3 = window.web3;\n//   let name, count;\n//   const acc = web3.currentProvider.selectedAddress;\n//   const networkId = web3.eth.net.getId();\n//   const networkData = Kycabi.networks[networkId];\n//   const kyc = new web3.eth.Contract(Kycabi.abi, networkData.address);\n//   let details = await kyc.methods.viewBank(acc).call({\n//     from: acc,\n//     gas: 4700000,\n//   });\n//   name = details[0];\n//   console.log(details);\n//   count = details[1];\n//   return (\n//     <div\n//       style={{\n//         marginLeft: \"20px\",\n//       }}\n//     >\n//       <div>\n//         <h3>Bank name : {name}</h3>\n//       </div>\n//       <div>\n//         <h3>ETH Address : {web3.currentProvider.selectedAddress}</h3>\n//       </div>\n//       <div>\n//         <h3>Total KYC count : {count}</h3>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport { React, Component } from \"react\";\nimport Kycabi from \"../../contracts/kyc.json\";\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n  }\n\n  async loadWeb3() {\n    const web3 = window.web3;\n    let name, count;\n    const acc = web3.currentProvider.selectedAddress;\n    const networkId = web3.eth.net.getId();\n    const networkData = Kycabi.networks[networkId];\n    const kyc = new web3.eth.Contract(Kycabi.abi, networkData.address);\n    let details = await kyc.methods.viewBank(acc).call({\n      from: acc,\n      gas: 4700000,\n    });\n    name = details[0];\n    console.log(details);\n    count = details[1];\n  }\n\n  // async loadBlockchainData() {\n  //   const web3 = window.web3;\n  //   const accounts = await web3.eth.getAccounts();\n  //   this.setState({ account: accounts[0] });\n  //   const networkId = await web3.eth.net.getId();\n  //   const networkData = Kycabi.networks[networkId];\n  //   if (networkData) {\n  //     console.log(\"success\");\n  //     var acc = web3.currentProvider.selectedAddress;\n  //     console.log(acc);\n  //   } else {\n  //     window.alert(\"Kyc contract not deployed to detected network.\");\n  //   }\n  // }\n\n  render() {\n    return (\n      <div\n        style={{\n          marginLeft: \"20px\",\n        }}\n      >\n        <div>\n          <h3>Bank name : {name}</h3>\n        </div>\n        <div>\n          <h3>ETH Address : {web3.currentProvider.selectedAddress}</h3>\n        </div>\n        <div>\n          <h3>Total KYC count : {count}</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EACH,MAAjBG,iBAAiB,GAAG;IACxB,MAAM,KAAKC,QAAL,EAAN;EACD;;EAEa,MAARA,QAAQ,GAAG;IACf,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAApB;IACA,IAAIE,IAAJ,EAAUC,KAAV;IACA,MAAMC,GAAG,GAAGJ,IAAI,CAACK,eAAL,CAAqBC,eAAjC;IACA,MAAMC,SAAS,GAAGP,IAAI,CAACQ,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAlB;IACA,MAAMC,WAAW,GAAGf,MAAM,CAACgB,QAAP,CAAgBL,SAAhB,CAApB;IACA,MAAMM,GAAG,GAAG,IAAIb,IAAI,CAACQ,GAAL,CAASM,QAAb,CAAsBlB,MAAM,CAACmB,GAA7B,EAAkCJ,WAAW,CAACK,OAA9C,CAAZ;IACA,IAAIC,OAAO,GAAG,MAAMJ,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBf,GAArB,EAA0BgB,IAA1B,CAA+B;MACjDC,IAAI,EAAEjB,GAD2C;MAEjDkB,GAAG,EAAE;IAF4C,CAA/B,CAApB;IAIApB,IAAI,GAAGe,OAAO,CAAC,CAAD,CAAd;IACAM,OAAO,CAACC,GAAR,CAAYP,OAAZ;IACAd,KAAK,GAAGc,OAAO,CAAC,CAAD,CAAf;EACD,CAnByB,CAqB1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAQ,MAAM,GAAG;IACP,oBACE;MACE,KAAK,EAAE;QACLC,UAAU,EAAE;MADP,CADT;MAAA,wBAKE;QAAA,uBACE;UAAA,2BAAiBxB,IAAjB;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALF,eAQE;QAAA,uBACE;UAAA,6BAAmBF,IAAI,CAACK,eAAL,CAAqBC,eAAxC;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QARF,eAWE;QAAA,uBACE;UAAA,iCAAuBH,KAAvB;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAiBD;;AAtDyB;;AAyD5B,eAAeN,GAAf"},"metadata":{},"sourceType":"module"}