{"ast":null,"code":"var _jsxFileName = \"/home/anoop/Documents/major/kyc_root/kyc/src/components/customer/auth/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthNavbar from \"./auth_navbar\";\nimport { Grid, Paper, Avatar, TextField, Button, Typography, Link } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Kycabi from \"../../../contracts/kyc.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    handleChange\n  } = _ref;\n  const paperStyle = {\n    padding: 20,\n    width: 500,\n    margin: \"0 auto\"\n  };\n  const avatarStyle = {\n    backgroundColor: \"#1bbd7e\"\n  };\n  const btnstyle = {\n    margin: \"8px 0\"\n  };\n  const web3 = window.web3;\n  const acc = web3.currentProvider.selectedAddress;\n  const [username, setUsername] = useState(\"\");\n  const passRef = useRef(\"\");\n  const [a, setA] = useState();\n\n  const onClickLogin = async () => {\n    const networkId = await web3.eth.net.getId();\n    const networkData = Kycabi.networks[networkId];\n\n    if (networkData) {\n      const kyc = new web3.eth.Contract(Kycabi.abi, networkData.address);\n      let b = await kyc.methods.verifyCustomer(username, passRef.current.value).call({\n        from: acc,\n        gas: 4700000\n      });\n      setA(b);\n\n      if (b == 1) {\n        window.alert(\"Wrong password\");\n      } else if (b == 2) {\n        window.alert(\"Selected metamask ETH address doesn't match with user address\");\n      } else if (b == 0) window.alert(\"Customer data doesn't exists!\");\n    } else {\n      window.alert(\"Kyc contract not deployed to detected network.\");\n    }\n  };\n\n  let navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AuthNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: paperStyle,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            style: avatarStyle,\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Username\",\n          placeholder: \"Enter username\",\n          fullWidth: true,\n          required: true,\n          value: username,\n          onChange: e => {\n            setUsername(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          placeholder: \"Enter password\",\n          type: \"password\",\n          fullWidth: true,\n          required: true,\n          inputRef: passRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"You are signing up using account: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: acc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          style: btnstyle,\n          fullWidth: true,\n          onClick: async () => {\n            onClickLogin();\n\n            if (a == 1) {\n              const networkId = await web3.eth.net.getId();\n              const networkData = Kycabi.networks[networkId];\n              const kyc = new web3.eth.Contract(Kycabi.abi, networkData.address);\n              await kyc.methods.setActiveCustomer(username).send({\n                from: acc,\n                gas: 4700000\n              });\n              window.alert(\"Login successful\");\n              navigate(\"/customer_home/profile\", {\n                replace: true\n              });\n            }\n          },\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"l1/5+QY+Juf5mXb0tpJ363P5XLM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","AuthNavbar","Grid","Paper","Avatar","TextField","Button","Typography","Link","LockOutlinedIcon","Kycabi","Login","handleChange","paperStyle","padding","width","margin","avatarStyle","backgroundColor","btnstyle","web3","window","acc","currentProvider","selectedAddress","username","setUsername","passRef","a","setA","onClickLogin","networkId","eth","net","getId","networkData","networks","kyc","Contract","abi","address","b","methods","verifyCustomer","current","value","call","from","gas","alert","navigate","e","target","setActiveCustomer","send","replace"],"sources":["/home/anoop/Documents/major/kyc_root/kyc/src/components/customer/auth/login.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthNavbar from \"./auth_navbar\";\nimport {\n  Grid,\n  Paper,\n  Avatar,\n  TextField,\n  Button,\n  Typography,\n  Link,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Kycabi from \"../../../contracts/kyc.json\";\n\nconst Login = ({ handleChange }) => {\n  const paperStyle = {\n    padding: 20,\n    width: 500,\n    margin: \"0 auto\",\n  };\n\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\n  const btnstyle = { margin: \"8px 0\" };\n  const web3 = window.web3;\n  const acc = web3.currentProvider.selectedAddress;\n\n  const [username, setUsername] = useState(\"\");\n  const passRef = useRef(\"\");\n  const [a, setA] = useState();\n\n  const onClickLogin = async () => {\n    const networkId = await web3.eth.net.getId();\n    const networkData = Kycabi.networks[networkId];\n    if (networkData) {\n      const kyc = new web3.eth.Contract(Kycabi.abi, networkData.address);\n      let b = await kyc.methods\n        .verifyCustomer(username, passRef.current.value)\n        .call({ from: acc, gas: 4700000 });\n      setA(b);\n      if (b == 1) {\n        window.alert(\"Wrong password\");\n      } else if (b == 2) {\n        window.alert(\n          \"Selected metamask ETH address doesn't match with user address\"\n        );\n      } else if (b == 0) window.alert(\"Customer data doesn't exists!\");\n    } else {\n      window.alert(\"Kyc contract not deployed to detected network.\");\n    }\n  };\n  let navigate = useNavigate();\n  return (\n    <div>\n      <AuthNavbar />\n      <Grid>\n        <Paper style={paperStyle}>\n          <Grid align=\"center\">\n            <Avatar style={avatarStyle}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <h2>Sign In</h2>\n          </Grid>\n          <TextField\n            label=\"Username\"\n            placeholder=\"Enter username\"\n            fullWidth\n            required\n            value={username}\n            onChange={(e) => {\n              setUsername(e.target.value);\n            }}\n          />\n          <TextField\n            label=\"Password\"\n            placeholder=\"Enter password\"\n            type=\"password\"\n            fullWidth\n            required\n            inputRef={passRef}\n          />\n          <br />\n          <br />\n          <Typography>You are signing up using account: </Typography>\n          <Typography>{acc}</Typography>\n          <br />\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            style={btnstyle}\n            fullWidth\n            onClick={async () => {\n              onClickLogin();\n              if (a == 1) {\n                const networkId = await web3.eth.net.getId();\n                const networkData = Kycabi.networks[networkId];\n                const kyc = new web3.eth.Contract(\n                  Kycabi.abi,\n                  networkData.address\n                );\n                await kyc.methods\n                  .setActiveCustomer(username)\n                  .send({ from: acc, gas: 4700000 });\n                window.alert(\"Login successful\");\n                navigate(\"/customer_home/profile\", { replace: true });\n              }\n            }}\n          >\n            Sign in\n          </Button>\n        </Paper>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}