{"ast":null,"code":"var _jsxFileName = \"/home/anoop/Documents/major/kyc_root/kyc/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport Kycabi from \"./contracts/kyc.json\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport BankHome from \"./components/bank_home/bank_home\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Kycabi.networks[networkId];\n\n    if (networkData) {\n      console.log(\"success\");\n      var acc = web3.currentProvider.selectedAddress;\n      console.log(acc);\n    } else {\n      window.alert(\"Kyc contract not deployed to detected network.\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(BankHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Web3","Kycabi","BankHome","Navbar","App","componentDidMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","console","log","acc","selectedAddress","render"],"sources":["/home/anoop/Documents/major/kyc_root/kyc/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport Kycabi from \"./contracts/kyc.json\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport BankHome from \"./components/bank_home/bank_home\";\nimport Navbar from \"./components/navbar/Navbar\";\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Kycabi.networks[networkId];\n    if (networkData) {\n      console.log(\"success\");\n      var acc = web3.currentProvider.selectedAddress;\n      console.log(acc);\n    } else {\n      window.alert(\"Kyc contract not deployed to detected network.\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BankHome />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sDAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;EACH,MAAjBM,iBAAiB,GAAG;IACxB,MAAM,KAAKC,QAAL,EAAN;IACA,MAAM,KAAKC,kBAAL,EAAN;EACD;;EAEa,MAARD,QAAQ,GAAG;IACf,IAAIE,MAAM,CAACC,QAAX,EAAqB;MACnBD,MAAM,CAACE,IAAP,GAAc,IAAIV,IAAJ,CAASQ,MAAM,CAACC,QAAhB,CAAd;MACA,MAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;IACD,CAHD,MAGO,IAAIH,MAAM,CAACE,IAAX,EAAiB;MACtBF,MAAM,CAACE,IAAP,GAAc,IAAIV,IAAJ,CAASQ,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;IACD,CAFM,MAEA;MACLJ,MAAM,CAACK,KAAP,CACE,qEADF;IAGD;EACF;;EAEuB,MAAlBN,kBAAkB,GAAG;IACzB,MAAMG,IAAI,GAAGF,MAAM,CAACE,IAApB;IACA,MAAMI,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASC,WAAT,EAAvB;IACA,KAAKC,QAAL,CAAc;MAAEC,OAAO,EAAEJ,QAAQ,CAAC,CAAD;IAAnB,CAAd;IACA,MAAMK,SAAS,GAAG,MAAMT,IAAI,CAACK,GAAL,CAASK,GAAT,CAAaC,KAAb,EAAxB;IACA,MAAMC,WAAW,GAAGrB,MAAM,CAACsB,QAAP,CAAgBJ,SAAhB,CAApB;;IACA,IAAIG,WAAJ,EAAiB;MACfE,OAAO,CAACC,GAAR,CAAY,SAAZ;MACA,IAAIC,GAAG,GAAGhB,IAAI,CAACE,eAAL,CAAqBe,eAA/B;MACAH,OAAO,CAACC,GAAR,CAAYC,GAAZ;IACD,CAJD,MAIO;MACLlB,MAAM,CAACK,KAAP,CAAa,gDAAb;IACD;EACF;;EAEDe,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AAxCyB;;AA2C5B,eAAexB,GAAf"},"metadata":{},"sourceType":"module"}