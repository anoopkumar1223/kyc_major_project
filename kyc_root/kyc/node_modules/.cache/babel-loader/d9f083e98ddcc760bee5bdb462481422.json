{"ast":null,"code":"var _jsxFileName = \"/home/anoop/Documents/major/kyc_root/kyc/src/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport SignInOutContainer from \"./components/auth/container\";\nimport Routes from \"./components/routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n    }\n  } // async loadBlockchainData() {\n  //   const web3 = window.web3;\n  //   const accounts = await web3.eth.getAccounts();\n  //   this.setState({ account: accounts[0] });\n  //   const networkId = await web3.eth.net.getId();\n  //   const networkData = Kycabi.networks[networkId];\n  //   if (networkData) {\n  //     console.log(\"success\");\n  //     var acc = web3.currentProvider.selectedAddress;\n  //     console.log(acc);\n  //   } else {\n  //     window.alert(\"Kyc contract not deployed to detected network.\");\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Web3","SignInOutContainer","Routes","BrowserRouter","Router","App","componentDidMount","loadWeb3","window","ethereum","web3","enable","currentProvider","alert","render"],"sources":["/home/anoop/Documents/major/kyc_root/kyc/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport Web3 from \"web3\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport SignInOutContainer from \"./components/auth/container\";\nimport Routes from \"./components/routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  // async loadBlockchainData() {\n  //   const web3 = window.web3;\n  //   const accounts = await web3.eth.getAccounts();\n  //   this.setState({ account: accounts[0] });\n  //   const networkId = await web3.eth.net.getId();\n  //   const networkData = Kycabi.networks[networkId];\n  //   if (networkData) {\n  //     console.log(\"success\");\n  //     var acc = web3.currentProvider.selectedAddress;\n  //     console.log(acc);\n  //   } else {\n  //     window.alert(\"Kyc contract not deployed to detected network.\");\n  //   }\n  // }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Routes />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,sDAAP;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;EACH,MAAjBO,iBAAiB,GAAG;IACxB,MAAM,KAAKC,QAAL,EAAN;EACD;;EAEa,MAARA,QAAQ,GAAG;IACf,IAAIC,MAAM,CAACC,QAAX,EAAqB;MACnBD,MAAM,CAACE,IAAP,GAAc,IAAIV,IAAJ,CAASQ,MAAM,CAACC,QAAhB,CAAd;MACA,MAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;IACD,CAHD,MAGO,IAAIH,MAAM,CAACE,IAAX,EAAiB;MACtBF,MAAM,CAACE,IAAP,GAAc,IAAIV,IAAJ,CAASQ,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;IACD,CAFM,MAEA;MACLJ,MAAM,CAACK,KAAP,CACE,qEADF;IAGD;EACF,CAhByB,CAkB1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,MAAM,GAAG;IACP,oBACE,QAAC,MAAD;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,uBACE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAOD;;AAzCyB;;AA4C5B,eAAeT,GAAf"},"metadata":{},"sourceType":"module"}